summary(slr) |> tidy()
anova(slr)
anova(slr) |> tidy()
slr |> plot()
slr_a <- slr |> plot()
slr_a <- slr |> augment()
View(slr_a)
y_pred = predict(slr)
y_pred |> head()
ggplot(aes(x = iris$sepal_length,y_preds)) +
geom_point()
type(y_preds)
class(y_preds)
class(y_pred)
y_pred
iris$sepal_length
ggplot(aes(x = iris$sepal_length,y_preds)) +
geom_point()
iris_a <- slr |> augment()
iris_a |>
ggplot(aes( x = sepal_length, y= .fiited)) +
geom_point()
iris_a |>
ggplot(aes( x = sepal_length, y= .fited)) +
geom_point()
iris_a |>
ggplot(aes( x = sepal_length, y= .fitted)) +
geom_point()
---
title: "BACK AGAIN!"
theme_set(theme_bw())
iris_a |>
ggplot(aes( x = sepal_length, y= .fitted)) +
geom_point()
iris_a |>
ggplot(aes( x = sepal_length, y= .fitted)) +
geom_point(size = 3)
iris_a |>
ggplot(aes( x = sepal_length, y= .fitted,color = species)) +
geom_point(size = 3)+
```
iris_a |>
ggplot(aes( x = sepal_length, y= .fitted,color = iris$species)) +
geom_point(size = 3)+
```
iris_a |>
ggplot(aes( x = sepal_length, y= .fitted,color ="steelblue")) +
geom_point(size = 3)+
```
iris_a |>
ggplot(aes( x = sepal_length, y= .fitted,color ="steelblue")) +
geom_point(size = 3)
iris_a |>
ggplot(aes( x = sepal_length, y= .fitted)) +
geom_point(size = 3)
iris_a |>
ggplot(aes( x = sepal_length, y= .fitted)) +
geom_point(size = 3, color = "steelblue")
iris_a |>
ggplot(aes( x = sepal_length, y= .fitted)) +
geom_point(size = 3, color = "steelblue")+
labs(x = " True Sepal Length ", y = "Predicted Sepal Length")
iris_a |>
ggplot(aes( x = sepal_length, y= .fitted)) +
geom_point(size = 3, color = "steelblue")+
labs(x = " True Sepal Length ", y = "Predicted Sepal Length")+
geom_smooth(method = "lm")
iris_a |>
ggplot(aes( x = sepal_length, y= .fitted)) +
geom_point(size = 3, color = "steelblue")+
labs(x = " True Sepal Length ", y = "Predicted Sepal Length")+
geom_smooth(method = "lm",se  = FALSE)
iris_a |>
ggplot(aes( x = sepal_length, y= .fitted)) +
geom_point(size = 3, color = "steelblue")+
labs(x = " True Sepal Length ", y = "Predicted Sepal Length")+
geom_smooth(method = "lm",se  = FALSE,color = "red",linetype = "dashed")
iris$predicted = y_pred
iris |> head9
iris |> head()
iris |>
mutate(residuals = "predicted" - "sepal_length")
iris |>
mutate("residuals" = "predicted" - "sepal_length")
iris |>
mutate(residuals = predicted - sepal_length)
iris |>
mutate(residuals = predicted - sepal_length,
Predicted = predict(slr))
iris |>
mutate(residuals = predicted - sepal_length,
Predicted = predict(slr)) |>
reposition(.before = residuals)
iris |>
mutate(residuals = predicted - sepal_length,
Predicted = predict(slr)) |>
arrange(.before = residuals)
iris |>
mutate(residuals = predicted - sepal_length,
Predicted = predict(slr)) |>
arrange(.before = species)
iris |>
mutate(residuals = predicted - sepal_length,
Predicted = predict(slr)) |>
arrange(Predicted,.before = species)
iris |>
mutate(residuals = predicted - sepal_length,
Predicted = predict(slr)) |>
arrange(Predicted,.before = species)
iris |>
mutate(residuals = predicted - sepal_length,
Predicted = predict(slr))
iris <-  iris |>
mutate(residuals = predicted - sepal_length,
Predicted = predict(slr))
View(iris)
iris$predicted <- NULL
View(iris)
iris <-  iris |>
mutate(residuals = predicted - sepal_length,
Predicted = predict(slr))
iris <-  iris |>
mutate( Predicted = predict(slr),
residuals = Predicted - sepal_length)
View(iris)
iris <-  iris |>
mutate( Predicted = predict(slr),
residuals = Predicted - sepal_length)
View(iris)
View(iris)
View(slr_a)
iris
iris |>
mutate(sepal_sizes = ntile(sepal_length,4))
iris |>
mutate(sepal_sizes = ntile(sepal_length,4)) |>
pull(sepal_sizes)
library(tidyverse)
library(palmerpenguins)
penguins = penguins
View(penguins)
penguins |> head()
penguins |> map(unique,Species)
penguins |> map(unique,species)
penguins |> unique(species)
penguins$species |> unique()
penguins |> pull(species) |> unique()
penguins |>
ggplot(aes(x= flipper_length_mm, y = body_mass_g, color = species))+
geom_point()+
geom_smooth(method = "lm")
penguins |>
ggplot(aes(x= flipper_length_mm, y = body_mass_g, color = species))+
geom_point()+
geom_smooth(method = "lm", se = FALSE)
penguins |>
ggplot(aes(x= flipper_length_mm, y = body_mass_g))+
geom_point(color = species, shape = species,size = 2)+
geom_smooth(method = "lm", se = FALSE)
penguins |>
ggplot(aes(x= flipper_length_mm, y = body_mass_g))+
geom_point(color = species, shape = species,size = 2)+
geom_smooth(method = "lm", se = FALSE)
penguins |>
ggplot(aes(x= flipper_length_mm, y = body_mass_g))+
geom_point(aes(color = species, shape = species,size = 2))+
geom_smooth(method = "lm", se = FALSE)
penguins |>
ggplot(aes(x= flipper_length_mm, y = body_mass_g))+
geom_point(aes(color = species, shape = species,size = ))+
geom_smooth(method = "lm", se = FALSE)
penguins |>
ggplot(aes(x = fct_infreq(species)))+
geom_bar()
penguins |>
ggplot(aes(x = fct_infreq(species)))+
geom_bar()+
scale_color_viridis_d(option = "viridis")
penguins |>
ggplot(aes(x = fct_infreq(species)))+
geom_bar()+
scale_color_viridis_d(option = "viridis")
penguins |>
ggplot(aes(x = fct_infreq(species)))+
geom_bar()+
scale_color_viridis_c(option = "viridis")
penguins |>
ggplot(aes(x = fct_infreq(species)))+
geom_bar()+
scale_fill_viridis_c(option = "viridis")
penguins |>
ggplot(aes(x = fct_infreq(species)))+
geom_bar()+
scale_fill_viridis_d(option = "viridis")
penguins |>
ggplot(aes(x = fct_infreq(species)))+
geom_bar()+
scale_fill_viridis_d(option = "viridis")
penguins |>
ggplot(aes(x = fct_infreq(species)))+
geom_bar()+
scale_fill_viridis_c(option = "viridis")
penguins |>
ggplot(aes(x = fct_infreq(species),color = species))+
geom_bar()+
scale_fill_viridis_c(option = "viridis")
penguins |>
ggplot(aes(x = fct_infreq(species),fill = species))+
geom_bar()+
scale_fill_viridis_c(option = "viridis")
penguins |>
ggplot(aes(x = fct_infreq(species),fill = species))+
geom_bar()+
scale_fill_viridis_d(option = "viridis")
penguins |>
ggplot(aes(x = fct_infreq(island),fill = species))+
geom_bar(position  = "fill")+
scale_fill_viridis_d(option = "viridis")
penguins |>
ggplot(aes(x = fct_infreq(island),fill = species))+
geom_bar()+
scale_fill_viridis_d(option = "viridis")
penguins |>
ggplot(aes(x= flipper_length_mm, y = body_mass_g))+
geom_point(aes(color = species, shape = species,size = ))
penguins |>
ggplot(aes(x= flipper_length_mm, y = body_mass_g))+
geom_point(aes(color = species, shape = species,size = )) +
facet_wrap(~island)
seq(1,101,10)
seq(from =1,end = 101, step = 10)
seq(from =1,end = 101, stepsize = 10)
seq(from =1,end = 101, 10)
seq(from =1,to = 101, 10)
seq(from =1,to = 101, step = 10)
seq(from =1,to = 101, steps = 10)
seq(from =1,to = 101, by = 10)
penguins |> distinct(island,species)
penguins |> distinct(species,island)
penguins |> distinct(species,island,.keep_all = TRUE)
penguins |> count(species,island)
penguins |> count(species,island,sort = TRUR)
penguins |> count(species,island,sort = TRUE)
penguins
penguins |>
mutate(sizes  = cut(body_mass_g,breaks = quantile(probs = c(0.25,0.5,0.75))))
penguins |>
mutate(sizes  = cut(body_mass_g,breaks = quantile(body_mass_g, probs = c(0.25,0.5,0.75))))
penguins |> na.omit() |>
mutate(sizes  = cut(body_mass_g,breaks = quantile(body_mass_g, probs = c(0.25,0.5,0.75))))
penguins |> na.omit() |>
mutate(sizes  = cut(body_mass_g,
breaks = quantile(body_mass_g, probs = c(0.25,0.5,0.75),labels =
c("small","medium","large"))))
penguins |> na.omit() |>
mutate(sizes  = cut(body_mass_g,
breaks = quantile(body_mass_g, probs = c(0.25,0.5,0.75),labels =
c("small","medium","large")))) |>
pull(sizes)
cut(body_mass_g,
breaks = quantile(body_mass_g, probs = c(0.25,0.5,0.75),labels =
c("small","medium","large"))))
penguins |> cut(body_mass_g,
breaks = quantile(body_mass_g, probs = c(0.25,0.5,0.75),labels =
c("small","medium","large"))))
penguins |> cut(body_mass_g,
breaks = quantile(body_mass_g, probs = c(0.25,0.5,0.75),labels =
c("small","medium","large")))
penguins |>
quantile(body_mass_g, probs = c(0.25,0.5,0.75),labels =
c("small","medium","large")))
penguins |>
quantile(body_mass_g, probs = c(0.25,0.5,0.75),labels =
c("small","medium","large"))
?quantile
penguins |>
quantile(body_mass_g, probs = seq(0,1,0.25),labels =
c("small","medium","large"))
penguins |>
quantile(body_mass_g, probs = seq(0,1,0.25))
penguins |>
quantile(body_mass_g, probs = seq(0,1,0.25))
quantile(penguins$body_mass_g, probs = seq(0,1,0.25))
quantile(penguins$body_mass_g, probs = seq(0,1,0.25),na.rm = TRUE)
quantile(penguins$body_mass_g, probs = seq(0,1,0.25),na.rm = TRUE,
labels =
c("small","medium","large","large","massive"))
quantile(penguins$body_mass_g, probs = seq(0,1,0.25),na.rm = TRUE,
labels =
c("small","medium","large","large","massive"))
quantile(penguins$body_mass_g, probs = seq(0,1,0.25),na.rm = TRUE,
labels =c("small","medium","large","large","massive"))
quant =   quantile(penguins$body_mass_g, probs = seq(0,1,0.25),na.rm = TRUE,
labels =c("small","medium","large","large","massive"))
quant =   quantile(penguins$body_mass_g, probs = seq(0,1,0.25),na.rm = TRUE,
labels =c("small","medium","large","large","massive"))
quant =   quantile(penguins$body_mass_g, probs = seq(0,1,0.25),na.rm = TRUE)
penguins |> na.omit() |>
mutate(sizes  = cut(body_mass_g,
breaks = quant,labels =
c("small","medium","large","huge","massive")))) |>
penguins |> na.omit() |>
mutate(sizes  = cut(body_mass_g,
breaks = quant,labels =
c("small","medium","large","huge","massive"))) |>
pull(sizes)
penguins |> na.omit() |>
mutate(sizes  = cut(body_mass_g,
breaks = quant,labels =
c("small","medium","large","huge"))) |>
pull(sizes)
penguins |> na.omit() |>
mutate(sizes  = cut(body_mass_g,
breaks = quant,labels =
c("small","medium","large","huge"),include.lowest = TRUE)) |>
pull(sizes)
penguins |> na.omit() |>
mutate(sizes  = cut(body_mass_g,
breaks = quant,labels =
c("small","medium","large","huge"),include.lowest = TRUE)) |>
count(sizes)
penguins |>
quantile(body_mass_g,probs = seq(0,1,0.25))
penguins |>
pull(body_mass_g) |>
quantile(probs = seq(0,1,0.1),na.rm = TRUE)
penguins |>
mutate(sizes  = cut(body_mass_g,
breaks = quant,labels =
c("small","medium","large","huge"),include.lowest = TRUE)) |>
count(sizes)
penguins |>
mutate(
body_mass_quantile = cut(
body_mass_g,
breaks = quantile(body_mass_g, probs = seq(0, 1, 0.25), na.rm = TRUE),
labels = c("Q1", "Q2", "Q3", "Q4"),
include.lowest = TRUE
)
)
penguins |>
mutate(
body_mass_quantile = cut(
body_mass_g,
breaks = quantile(body_mass_g, probs = seq(0, 1, 0.25), na.rm = TRUE),
labels = c("Q1", "Q2", "Q3", "Q4"),
include.lowest = TRUE
)
) |> pull(body_mass_quantile)
penguins |>
mutate(
body_mass_quantile = cut(
body_mass_g,
breaks = quantile(body_mass_g, probs = seq(0, 1, 0.25), na.rm = TRUE),
labels = c("Q1", "Q2", "Q3", "Q4"),
include.lowest = TRUE
),.keep = "used"
)
penguins |>
mutate(
body_mass_quantile = cut(
body_mass_g,
breaks = quantile(body_mass_g, probs = seq(0, 1, 0.25), na.rm = TRUE),
labels = c("Q1", "Q2", "Q3", "Q4"),
include.lowest = TRUE
),.keep = "used")
penguins |>
mutate(
body_mass_quantile = cut(
body_mass_g,
breaks = quantile(body_mass_g, probs = seq(0, 1, 0.25), na.rm = TRUE),
labels = c("Q1", "Q2", "Q3", "Q4"),
include.lowest = TRUE,
.after = body_mass_g
)
)
penguins |>
mutate(
body_mass_quantile = cut(
body_mass_g,
breaks = quantile(body_mass_g, probs = seq(0, 1, 0.25), na.rm = TRUE),
labels = c("Q1", "Q2", "Q3", "Q4"),
include.lowest = TRUE,
.before = body_mass_g
)
)
penguins |>
mutate(
body_mass_quantile = cut(
body_mass_g,
breaks = quantile(body_mass_g, probs = seq(0, 1, 0.25), na.rm = TRUE),
labels = c("Q1", "Q2", "Q3", "Q4"),
include.lowest = TRUE,
.before = body_mass_g
)
)
penguins |>
mutate(
body_mass_quantile = cut(
body_mass_g,
breaks = quantile(body_mass_g, probs = seq(0, 1, 0.25), na.rm = TRUE),
labels = c("Q1", "Q2", "Q3", "Q4"),
include.lowest = TRUE,
),
.before = body_mass_g
)
penguins |>
mutate(
body_mass_quantile = cut(
body_mass_g,
breaks = quantile(body_mass_g, probs = seq(0, 1, 0.25), na.rm = TRUE),
labels = c("Q1", "Q2", "Q3", "Q4"),
include.lowest = TRUE,
),
.after = body_mass_g
)
penguins |>
mutate(
body_mass_quantile = cut(
body_mass_g,
breaks = quantile(body_mass_g, probs = seq(0, 1, 0.25), na.rm = TRUE),
labels = c("Q1", "Q2", "Q3", "Q4"),
include.lowest = TRUE,
),
.beofre = body_mass_g
)
penguins |>
mutate(
body_mass_quantile = cut(
body_mass_g,
breaks = quantile(body_mass_g, probs = seq(0, 1, 0.25), na.rm = TRUE),
labels = c("Q1", "Q2", "Q3", "Q4"),
include.lowest = TRUE,
),
.after = body_mass_g
)
penguins |>
mutate(sizes  = cut(body_mass_g,
breaks = quant,labels =
c("small","medium","large","huge"),include.lowest = TRUE),
.after = body_mass_g) |>
count(sizes)
penguins |>
mutate(sizes  = cut(body_mass_g,
breaks = quant,labels =
c("small","medium","large","huge"),include.lowest = TRUE),
.after = body_mass_g)
penguins <- penguins |>
mutate(sizes  = cut(body_mass_g,
breaks = quant,labels =
c("small","medium","large","huge"),include.lowest = TRUE),
.after = body_mass_g)
penguins |> count(sex,sizes)
penguins |> count(sex,sizes) |> plot9
penguins |> count(sex,sizes) |> plot()
|> plot()
penguins |> na.omit() |>
count(sex,sizes) |>
plot()
penguins |> na.omit() |>
count(sex,sizes) |>
ggplot(aes(x = sex, y= n))
penguins |> na.omit() |>
count(sex,sizes) |>
ggplot(aes(x = sex, y= n)) |>
geom_bar()
penguins |> na.omit() |>
count(sex,sizes) |>
ggplot(aes(x = sex, y= n)) +
geom_bar()
penguins |> na.omit() |>
count(sex,sizes) |>
ggplot(aes(x = sex, y= n)) +
geom_col()
penguins |> na.omit() |>
count(sex,sizes) |>
ggplot(aes(x = c(sex,sizes), y= n)) +
geom_col()
penguins |> na.omit() |>
count(sex,sizes)
penguins |> na.omit() |>
count(sex,sizes) |>
ggplot(aes(x = sizes, y = n, fill = n))+
geom_bar()
penguins |> na.omit() |>
count(sex,sizes) |>
ggplot(aes(x = sizes, y = n, fill = sex))+
geom_bar()
penguins |> na.omit() |>
count(sex,sizes) |>
ggplot(aes(x = sizes, y = n, fill = sex))+
geom_bar()
penguins |> na.omit() |>
count(sex,sizes) |>
ggplot(aes(x = sizes, y = n, fill = sex))+
geom_bar()
penguins |> na.omit() |>
count(sex,sizes)
penguins |> na.omit() |>
count(sex,sizes) |>
ggplot(aes(x = sizes, y = n, fill = sex))+
geom_bar()
penguins |> na.omit() |>
count(sex,sizes) |>
ggplot(aes(x = sizes, y = n, fill = sex))+
geom_bar(stat = "identuty", position = "dodge")
penguins |> na.omit() |>
count(sex,sizes) |>
ggplot(aes(x = sizes, y = n, fill = sex))+
geom_bar(stat = "identity", position = "dodge")
load("C:/Users/KAsab/Downloads/panss1.rdata")
View(panss1)
